version: '3.8'

services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: cast-backend
    restart: unless-stopped
    env_file:
      - .env
    environment:
      - FLASK_ENV=production
    expose:
      - "8051"
    volumes:
      - /data/CAST_ext/users:/data/CAST_ext/users
    networks:
      - cast-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8051/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: cast-frontend
    restart: unless-stopped
    environment:
      - NODE_ENV=production
    volumes:
      - ./frontend:/app
      - frontend_build:/var/www/html  # Separate volume for frontend build
    expose:
      - "80"
    depends_on:
      - backend
    networks:
      - cast-network
    restart: always
    command: ["tail", "-f", "/dev/null"]

  nginx:
    image: nginx:alpine
    container_name: cast-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/project.conf:/etc/nginx/conf.d/default.conf
      - frontend_build:/var/www/html 
      - nginx-logs:/var/log/nginx
    depends_on:
      - backend
      - frontend
    networks:
      - cast-network
    restart: always

networks:
  cast-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

volumes:
  nginx-logs:
  frontend_build:
